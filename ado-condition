trigger:
  branches:
    include:
      - main

variables:
  run_project: false
  run_iam: false
  run_compute: false
  run_database: false

stages:
  - stage: DetectChanges
    displayName: 'Detect Module Changes'
    jobs:
      - job: Detect
        steps:
          - checkout: self
          - script: |
              echo "##[group]Reading commit message"
              COMMIT_MSG=$(git log -1 --pretty=%B)
              echo "Commit message: $COMMIT_MSG"

              if echo "$COMMIT_MSG" | grep -iq "project change"; then
                echo "##vso[task.setvariable variable=run_project]true"
              fi
              if echo "$COMMIT_MSG" | grep -iq "iam change"; then
                echo "##vso[task.setvariable variable=run_iam]true"
              fi
              if echo "$COMMIT_MSG" | grep -iq "compute change"; then
                echo "##vso[task.setvariable variable=run_compute]true"
              fi
              if echo "$COMMIT_MSG" | grep -iq "database change"; then
                echo "##vso[task.setvariable variable=run_database]true"
              fi
              echo "##[endgroup]"
            displayName: 'Detect Changes'

  - stage: Project
    dependsOn: DetectChanges
    condition: eq(variables['run_project'], 'true')
    jobs:
      - job: TerraformProject
        steps:
          - script: echo "Running Terraform for Project module"

  - stage: IAM
    dependsOn: DetectChanges
    condition: eq(variables['run_iam'], 'true')
    jobs:
      - job: TerraformIAM
        steps:
          - script: echo "Running Terraform for IAM module"

  - stage: Compute
    dependsOn: DetectChanges
    condition: eq(variables['run_compute'], 'true')
    jobs:
      - job: TerraformCompute
        steps:
          - script: echo "Running Terraform for Compute module"

  - stage: Database
    dependsOn: DetectChanges
    condition: eq(variables['run_database'], 'true')
    jobs:
      - job: TerraformDatabase
        steps:
          - script: echo "Running Terraform for Database module"
